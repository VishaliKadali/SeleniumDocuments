Relative locators in Selenium (introduced in Selenium 4) are a feature that allows you to locate web elements based on their position relative to other elements on the page. They can be particularly useful when the target element doesn't have a unique identifier like an ID, name, or class, but its position relative to other elements is consistent.

Here are the main relative locators provided by Selenium:

above(): Locates an element that is located above a specified element.
below(): Locates an element that is located below a specified element.
toLeftOf(): Locates an element that is located to the left of a specified element.
toRightOf(): Locates an element that is located to the right of a specified element.
near(): Locates an element that is near (within 50 pixels by default) to a specified element.
Example Usage in Java:
java
Copy code
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.openqa.selenium.support.locators.RelativeLocator.*;

public class RelativeLocatorExample {
    public static void main(String[] args) {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();
        
        driver.get("https://example.com");

        WebElement referenceElement = driver.findElement(By.id("referenceElementId"));
        
        // Locate an element that is above the reference element
        WebElement elementAbove = driver.findElement(with(By.tagName("input")).above(referenceElement));
        
        // Locate an element that is below the reference element
        WebElement elementBelow = driver.findElement(with(By.tagName("input")).below(referenceElement));
        
        // Locate an element that is to the left of the reference element
        WebElement elementToLeft = driver.findElement(with(By.tagName("input")).toLeftOf(referenceElement));
        
        // Locate an element that is to the right of the reference element
        WebElement elementToRight = driver.findElement(with(By.tagName("input")).toRightOf(referenceElement));
        
        // Locate an element that is near the reference element (within 50 pixels by default)
        WebElement elementNear = driver.findElement(with(By.tagName("input")).near(referenceElement));
        
        driver.quit();
    }
}

Key Points:
with(By locator): The with() method is used to specify the base locator that identifies the type of elements you're interested in (like By.tagName("input")).
The relative locator methods (above(), below(), toLeftOf(), toRightOf(), near()) are then chained to with() to describe the spatial relationship.
These locators can make your tests more resilient by relying on the visual structure of the web page rather than specific attributes, which can change more frequently.